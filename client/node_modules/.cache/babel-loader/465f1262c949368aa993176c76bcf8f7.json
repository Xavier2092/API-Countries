{"ast":null,"code":"import { GET_COUNTRY, GET_COUNTRY_NAME, GET_DETAILS, FILTER_BY_CONTINENT, FILTER_BY_POPULATION, ORDER_BY_COUNTRY, GET_ONLY_COUNTRIES, GET_TOUR_ACTIVITY, COUNTRY_BY_ACTIVITY } from \"../actions/index\";\nconst initialState = {\n  country: [],\n  allCountries: [],\n  details: {},\n  onlyCountries: [],\n  tourActivity: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COUNTRY:\n      return { ...state,\n        country: action.payload,\n        allCountries: action.payload\n      };\n\n    case GET_COUNTRY_NAME:\n      return { ...state,\n        country: action.payload\n      };\n\n    case GET_DETAILS:\n      return { ...state,\n        details: action.payload\n      };\n\n    case ORDER_BY_COUNTRY:\n      let sortCountries = action.payload === 'asc' ? state.country.sort(function (a, b) {\n        if (a.nameCountry > b.nameCountry) {\n          return 1;\n        }\n\n        if (b.nameCountry > a.nameCountry) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.country.sort(function (a, b) {\n        if (a.nameCountry > b.nameCountry) {\n          return -1;\n        }\n\n        if (b.nameCountry > a.nameCountry) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        country: sortCountries\n      };\n\n    case FILTER_BY_CONTINENT:\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === 'All' ? allCountries : allCountries.filter(con => con.continent === action.payload);\n      return { ...state,\n        country: continentFiltered\n      };\n\n    case FILTER_BY_POPULATION:\n      let sortPopulation = action.payload === \"less\" ? state.country.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.country.sort(function (a, b) {\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        country: sortPopulation\n      };\n\n    case GET_ONLY_COUNTRIES:\n      return { ...state,\n        onlyCountries: action.payload\n      };\n\n    case GET_TOUR_ACTIVITY:\n      return { ...state,\n        tourActivity: action.payload\n      };\n\n    case COUNTRY_BY_ACTIVITY:\n      const filcountry = state.country;\n      const actFilter = action.payload === 'All' ? filcountry : filcountry.filter(c => c.tourist_activities.find(a => a.nameActivity === action.payload));\n      return { ...state,\n        country: actFilter\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/xavier/Escritorio/mi_PI/PI-Countries-main/client/src/redux/reducers/index.js"],"names":["GET_COUNTRY","GET_COUNTRY_NAME","GET_DETAILS","FILTER_BY_CONTINENT","FILTER_BY_POPULATION","ORDER_BY_COUNTRY","GET_ONLY_COUNTRIES","GET_TOUR_ACTIVITY","COUNTRY_BY_ACTIVITY","initialState","country","allCountries","details","onlyCountries","tourActivity","rootReducer","state","action","type","payload","sortCountries","sort","a","b","nameCountry","continentFiltered","filter","con","continent","sortPopulation","population","filcountry","actFilter","c","tourist_activities","find","nameActivity"],"mappings":"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","sourcesContent":["import { \n  GET_COUNTRY,\n  GET_COUNTRY_NAME,\n  GET_DETAILS,\n  FILTER_BY_CONTINENT,\n  FILTER_BY_POPULATION,\n  ORDER_BY_COUNTRY,\n  GET_ONLY_COUNTRIES,\n  GET_TOUR_ACTIVITY,\n  COUNTRY_BY_ACTIVITY } from \"../actions/index\";\n\nconst initialState = {\n  country : [],\n  allCountries : [],\n  details : {},\n  onlyCountries: [],\n  tourActivity: [],\n}\n\nfunction rootReducer(state = initialState, action){\n  switch(action.type){\n    case GET_COUNTRY:\n      return {\n        ...state,\n        country: action.payload,\n        allCountries: action.payload\n      };\n    \n    case GET_COUNTRY_NAME:\n      return {\n        ...state,\n        country: action.payload\n      }\n    \n    case GET_DETAILS:\n      return {\n        ...state,\n        details: action.payload\n      }\n\n    case ORDER_BY_COUNTRY:\n      let sortCountries = action.payload === 'asc' ?\n      state.country.sort(function (a,b) {\n        if (a.nameCountry > b.nameCountry){\n          return 1;\n        }\n        if (b.nameCountry > a.nameCountry){\n          return -1;\n        }\n        return 0;\n      }) :\n      state.country.sort(function (a,b) {\n        if (a.nameCountry > b.nameCountry){\n          return -1;\n        }\n        if (b.nameCountry > a.nameCountry){\n          return 1;\n        }\n        return 0;\n      })\n      return {\n        ...state,\n        country: sortCountries\n      }\n        \n    case FILTER_BY_CONTINENT:\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === 'All' ? allCountries : allCountries.filter(con=> con.continent === action.payload);\n      return {\n        ...state,\n        country: continentFiltered\n      }\n    \n    case FILTER_BY_POPULATION:\n      let sortPopulation = action.payload === \"less\" ?\n        state.country.sort(function (a,b) {\n          if (a.population > b.population){\n            return 1;\n          }\n          if (b.population > a.population){\n            return -1;\n          }\n          return 0;\n        }) :\n        state.country.sort(function (a,b) {\n          if (a.population > b.population){\n            return -1;\n          }\n          if (b.population > a.population){\n            return 1;\n          }\n          return 0;\n        })\n      return {\n        ...state,\n        country: sortPopulation\n      }\n    \n    case GET_ONLY_COUNTRIES:  \n      return {\n        ...state,\n        onlyCountries: action.payload\n      }\n    \n    case GET_TOUR_ACTIVITY:\n      return {\n        ...state,\n        tourActivity: action.payload\n      }\n\n    case COUNTRY_BY_ACTIVITY:\n    const filcountry = state.country;\n    const actFilter = action.payload === 'All' ? filcountry : filcountry.filter(c => c.tourist_activities.find(a => a.nameActivity === action.payload))\n      return {\n      ...state,\n      country: actFilter\n      }\n    \n\n    default:\n      return state;\n  }\n}\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}