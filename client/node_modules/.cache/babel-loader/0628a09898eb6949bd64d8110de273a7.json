{"ast":null,"code":"import axios from 'axios';\nexport const GET_COUNTRY = 'GET_COUNTRY';\nexport const GET_COUNTRY_NAME = 'GET_COUNTRY_NAME';\nexport const GET_DETAILS = 'GET_DETAILS;';\nexport const ORDER_BY_COUNTRY = 'ORDER_BY_COUNTRY';\nexport const FILTER_BY_CONTINENT = 'FILTER_BY_CONTINENT';\nexport const FILTER_BY_POPULATION = 'FILTER_BY_POPULATION';\nexport const GET_ONLY_COUNTRIES = 'GET_ONLY_COUNTRIES';\nexport const GET_TOUR_ACTIVITY = 'GET_TOUR_ACTIVITY';\nexport const COUNTRY_BY_ACTIVITY = 'COUNTRY_BY_ACTIVITY';\nexport function getCountry() {\n  return async function (dispatch) {\n    try {\n      var jsonCountry = await axios.get('http://localhost:3001/api/Country');\n      return dispatch({\n        type: \"GET_COUNTRY\",\n        payload: jsonCountry.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getCountryName(countryQ) {\n  return async function (dispatch) {\n    try {\n      var jsonName = await axios.get('http://localhost:3001/api/Country?countryQ=' + countryQ);\n      return dispatch({\n        type: \"GET_COUNTRY_NAME\",\n        payload: jsonName.data\n      });\n    } catch (error) {\n      console.log(error);\n      alert(\"Pais no existe\");\n    }\n  };\n}\nexport function getDetails(id) {\n  return async function (dispatch) {\n    try {\n      var jsonDetail = await axios.get('http://localhost:3001/api/Country/' + id);\n      return dispatch({\n        type: GET_DETAILS,\n        payload: jsonDetail.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function orderByCountry(payload) {\n  return {\n    type: \"ORDER_BY_COUNTRY\",\n    payload\n  };\n}\nexport function filterCountryByContinent(payload) {\n  return {\n    type: \"FILTER_BY_CONTINENT\",\n    payload\n  };\n}\nexport function filterCountryByPopulation(payload) {\n  return {\n    type: \"FILTER_BY_POPULATION\",\n    payload\n  };\n}\nexport function getOnlyCountries() {\n  return async function (dispatch) {\n    try {\n      var jsonOnlyCountry = await axios.get('http://localhost:3001/api/AllCountries');\n      return dispatch({\n        type: \"GET_ONLY_COUNTRIES\",\n        payload: jsonOnlyCountry.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function postTourActivity(payload) {\n  console.log(\"ActionPay \" + payload);\n  return async function (dispatch) {\n    const actTour = await axios.post('http://localhost:3001/api/TourActivity', payload);\n    return actTour;\n  };\n}\nexport function getTourActivity() {\n  return async function (dispatch) {\n    try {\n      const jsonActTour = await axios.get('http://localhost:3001/api/TourActivity');\n      return dispatch({\n        type: \"GET_TOUR_ACTIVITY\",\n        payload: jsonActTour.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function countryByActivity(payload) {\n  console.log(\"pay \" + payload);\n  return {\n    type: \"COUNTRY_BY_ACTIVITY\",\n    payload\n  };\n}\n; // export function getCountry() {\n//   return (dispatch) => {\n//     try{\n//       return fetch(`http://localhost:3001/api/Country`)\n//         .then(response => response.json())\n//         .then(countries => {\n//           dispatch({ \n//                 type: \"GET_COUNTRY\",\n//                 payload: countries });\n//         });\n//     } catch (error){\n//       console.log(error)\n//     }\n//   };\n// }","map":{"version":3,"sources":["/home/xavier/Descargas/countries/a/PI/PI-Countries-main/client/src/redux/actions/index.js"],"names":["axios","GET_COUNTRY","GET_COUNTRY_NAME","GET_DETAILS","ORDER_BY_COUNTRY","FILTER_BY_CONTINENT","FILTER_BY_POPULATION","GET_ONLY_COUNTRIES","GET_TOUR_ACTIVITY","COUNTRY_BY_ACTIVITY","getCountry","dispatch","jsonCountry","get","type","payload","data","error","console","log","getCountryName","countryQ","jsonName","alert","getDetails","id","jsonDetail","orderByCountry","filterCountryByContinent","filterCountryByPopulation","getOnlyCountries","jsonOnlyCountry","postTourActivity","actTour","post","getTourActivity","jsonActTour","countryByActivity"],"mappings":"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","sourcesContent":["import axios from 'axios';\nexport const GET_COUNTRY = 'GET_COUNTRY';\nexport const GET_COUNTRY_NAME = 'GET_COUNTRY_NAME';\nexport const GET_DETAILS = 'GET_DETAILS;'\nexport const ORDER_BY_COUNTRY = 'ORDER_BY_COUNTRY';\nexport const FILTER_BY_CONTINENT = 'FILTER_BY_CONTINENT';\nexport const FILTER_BY_POPULATION = 'FILTER_BY_POPULATION';\nexport const GET_ONLY_COUNTRIES = 'GET_ONLY_COUNTRIES';\nexport const GET_TOUR_ACTIVITY = 'GET_TOUR_ACTIVITY';\nexport const COUNTRY_BY_ACTIVITY = 'COUNTRY_BY_ACTIVITY';\n\nexport function getCountry(){\n  return async function (dispatch){\n    try{\n        var jsonCountry = await axios.get('http://localhost:3001/api/Country');\n          return dispatch({\n            type: \"GET_COUNTRY\",\n            payload: jsonCountry.data\n          })\n    } catch (error){\n      console.log(error)\n    }\n  }\n}\n\nexport function getCountryName(countryQ){\n  return async function (dispatch){\n    try{\n        var jsonName = await axios.get('http://localhost:3001/api/Country?countryQ=' + countryQ);\n          return dispatch({\n            type: \"GET_COUNTRY_NAME\",\n            payload: jsonName.data\n          })\n    } catch (error){\n      console.log(error);\n      alert(\"Pais no existe\");\n    }\n  }\n}\n\nexport function getDetails(id){\n  return async function(dispatch){\n    try{\n        var jsonDetail = await axios.get('http://localhost:3001/api/Country/' + id);\n          return dispatch({\n            type: GET_DETAILS,\n            payload: jsonDetail.data\n          })\n    } catch (error){\n      console.log(error)\n    }\n  }\n}\n\nexport function orderByCountry(payload){\n  return {\n    type: \"ORDER_BY_COUNTRY\",\n    payload\n  }\n}\n\nexport function filterCountryByContinent(payload){\n  return {\n    type: \"FILTER_BY_CONTINENT\",\n    payload\n  }\n}\n\nexport function filterCountryByPopulation(payload){\n  return {\n    type: \"FILTER_BY_POPULATION\",\n    payload\n  }\n}\n\nexport function getOnlyCountries(){\n  return async function(dispatch){\n    try{\n      var jsonOnlyCountry = await axios.get('http://localhost:3001/api/AllCountries');\n        return dispatch({\n            type: \"GET_ONLY_COUNTRIES\",\n            payload: jsonOnlyCountry.data\n        })\n    } catch (error){\n      console.log(error)\n    }\n  }\n}\n\nexport function postTourActivity(payload){\n  console.log(\"ActionPay \" + payload);\n  return async function (dispatch){\n    const actTour = await axios.post('http://localhost:3001/api/TourActivity', payload);\n    return actTour;\n  }\n}\n\nexport function getTourActivity(){\n  return async function(dispatch){\n    try{\n      const jsonActTour = await axios.get('http://localhost:3001/api/TourActivity');\n        return dispatch({\n          type: \"GET_TOUR_ACTIVITY\",\n          payload: jsonActTour.data\n        })\n\n    } catch (error){\n      console.log(error)\n    }\n  }\n}\n\nexport function countryByActivity(payload) {\n  console.log(\"pay \" + payload);\n  return {\n      type: \"COUNTRY_BY_ACTIVITY\",\n      payload\n  }\n};\n\n// export function getCountry() {\n//   return (dispatch) => {\n//     try{\n//       return fetch(`http://localhost:3001/api/Country`)\n//         .then(response => response.json())\n//         .then(countries => {\n//           dispatch({ \n//                 type: \"GET_COUNTRY\",\n//                 payload: countries });\n//         });\n//     } catch (error){\n//       console.log(error)\n//     }\n//   };\n// }"]},"metadata":{},"sourceType":"module"}