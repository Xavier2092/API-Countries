{"ast":null,"code":"import { GET_COUNTRY, GET_COUNTRY_NAME, GET_DETAILS, FILTER_BY_CONTINENT, FILTER_BY_POPULATION, ORDER_BY_COUNTRY, GET_ONLY_COUNTRIES, GET_TOUR_ACTIVITY, COUNTRY_BY_ACTIVITY } from \"../actions/index\";\nconst initialState = {\n  country: [],\n  allCountries: [],\n  details: {},\n  onlyCountries: [],\n  tourActivity: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COUNTRY:\n      return { ...state,\n        country: action.payload,\n        allCountries: action.payload\n      };\n\n    case GET_COUNTRY_NAME:\n      return { ...state,\n        country: action.payload\n      };\n\n    case GET_DETAILS:\n      return { ...state,\n        details: action.payload\n      };\n\n    case ORDER_BY_COUNTRY:\n      let sortCountries = action.payload === 'asc' ? state.country.sort(function (a, b) {\n        if (a.nameCountry > b.nameCountry) {\n          return 1;\n        }\n\n        if (b.nameCountry > a.nameCountry) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.country.sort(function (a, b) {\n        if (a.nameCountry > b.nameCountry) {\n          return -1;\n        }\n\n        if (b.nameCountry > a.nameCountry) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        country: sortCountries\n      };\n\n    case FILTER_BY_CONTINENT:\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === 'All' ? allCountries : allCountries.filter(con => con.continent === action.payload);\n      return { ...state,\n        country: continentFiltered\n      };\n\n    case FILTER_BY_POPULATION:\n      let sortPopulation = action.payload === \"less\" ? state.country.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.country.sort(function (a, b) {\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        country: sortPopulation\n      };\n\n    case GET_ONLY_COUNTRIES:\n      return { ...state,\n        onlyCountries: action.payload\n      };\n\n    case GET_TOUR_ACTIVITY:\n      return { ...state,\n        tourActivity: action.payload\n      };\n\n    case COUNTRY_BY_ACTIVITY:\n      const filcountry = state.country;\n      const actFilter = action.payload === 'All' ? filcountry : filcountry.filter(c => c.tourist_activities.find(a => a.nameActivity === action.payload));\n      return { ...state,\n        country: actFilter\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"names":["GET_COUNTRY","GET_COUNTRY_NAME","GET_DETAILS","FILTER_BY_CONTINENT","FILTER_BY_POPULATION","ORDER_BY_COUNTRY","GET_ONLY_COUNTRIES","GET_TOUR_ACTIVITY","COUNTRY_BY_ACTIVITY","initialState","country","allCountries","details","onlyCountries","tourActivity","rootReducer","state","action","type","payload","sortCountries","sort","a","b","nameCountry","continentFiltered","filter","con","continent","sortPopulation","population","filcountry","actFilter","c","tourist_activities","find","nameActivity"],"sources":["/home/xavier/Documentos/GitHub/API-Countries/client/src/redux/reducers/index.js"],"sourcesContent":["import { \n  GET_COUNTRY,\n  GET_COUNTRY_NAME,\n  GET_DETAILS,\n  FILTER_BY_CONTINENT,\n  FILTER_BY_POPULATION,\n  ORDER_BY_COUNTRY,\n  GET_ONLY_COUNTRIES,\n  GET_TOUR_ACTIVITY,\n  COUNTRY_BY_ACTIVITY } from \"../actions/index\";\n\nconst initialState = {\n  country : [],\n  allCountries : [],\n  details : {},\n  onlyCountries: [],\n  tourActivity: [],\n}\n\nfunction rootReducer(state = initialState, action){\n  switch(action.type){\n    case GET_COUNTRY:\n      return {\n        ...state,\n        country: action.payload,\n        allCountries: action.payload\n      };\n    \n    case GET_COUNTRY_NAME:\n      return {\n        ...state,\n        country: action.payload\n      }\n    \n    case GET_DETAILS:\n      return {\n        ...state,\n        details: action.payload\n      }\n\n    case ORDER_BY_COUNTRY:\n      let sortCountries = action.payload === 'asc' ?\n      state.country.sort(function (a,b) {\n        if (a.nameCountry > b.nameCountry){\n          return 1;\n        }\n        if (b.nameCountry > a.nameCountry){\n          return -1;\n        }\n        return 0;\n      }) :\n      state.country.sort(function (a,b) {\n        if (a.nameCountry > b.nameCountry){\n          return -1;\n        }\n        if (b.nameCountry > a.nameCountry){\n          return 1;\n        }\n        return 0;\n      })\n      return {\n        ...state,\n        country: sortCountries\n      }\n        \n    case FILTER_BY_CONTINENT:\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === 'All' ? allCountries : allCountries.filter(con=> con.continent === action.payload);\n      return {\n        ...state,\n        country: continentFiltered\n      }\n    \n    case FILTER_BY_POPULATION:\n      let sortPopulation = action.payload === \"less\" ?\n        state.country.sort(function (a,b) {\n          if (a.population > b.population){\n            return 1;\n          }\n          if (b.population > a.population){\n            return -1;\n          }\n          return 0;\n        }) :\n        state.country.sort(function (a,b) {\n          if (a.population > b.population){\n            return -1;\n          }\n          if (b.population > a.population){\n            return 1;\n          }\n          return 0;\n        })\n      return {\n        ...state,\n        country: sortPopulation\n      }\n    \n    case GET_ONLY_COUNTRIES:  \n      return {\n        ...state,\n        onlyCountries: action.payload\n      }\n    \n    case GET_TOUR_ACTIVITY:\n      return {\n        ...state,\n        tourActivity: action.payload\n      }\n\n    case COUNTRY_BY_ACTIVITY:\n    const filcountry = state.country;\n    const actFilter = action.payload === 'All' ? filcountry : filcountry.filter(c => c.tourist_activities.find(a => a.nameActivity === action.payload))\n      return {\n      ...state,\n      country: actFilter\n      }\n    \n\n    default:\n      return state;\n  }\n}\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}